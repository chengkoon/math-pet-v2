/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * List of activities
 * @export
 * @interface Activity
 */
export interface Activity {
    /**
     * Unique identifier for the activity/event
     * @type {string}
     * @memberof Activity
     */
    readonly id: string;
    /**
     * Type of activity (e.g., "HOMEWORK_ASSIGNED", "LOGGED_IN")
     * @type {string}
     * @memberof Activity
     */
    type: string;
    /**
     * Personalized activity message (e.g., "You logged in", "You assigned homework to John")
     * @type {string}
     * @memberof Activity
     */
    message: string;
    /**
     * Icon identifier for UI display
     * @type {string}
     * @memberof Activity
     */
    icon?: string;
    /**
     * When the activity occurred
     * @type {Date}
     * @memberof Activity
     */
    readonly createdAt: Date;
    /**
     * Additional metadata for the activity
     * @type {{ [key: string]: object; }}
     * @memberof Activity
     */
    metadata?: { [key: string]: object; };
}

/**
 * Check if a given object implements the Activity interface.
 */
export function instanceOfActivity(value: object): value is Activity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function ActivityFromJSON(json: any): Activity {
    return ActivityFromJSONTyped(json, false);
}

export function ActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): Activity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'message': json['message'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'createdAt': (new Date(json['createdAt'])),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function ActivityToJSON(json: any): Activity {
    return ActivityToJSONTyped(json, false);
}

export function ActivityToJSONTyped(value?: Omit<Activity, 'id'|'createdAt'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'message': value['message'],
        'icon': value['icon'],
        'metadata': value['metadata'],
    };
}

