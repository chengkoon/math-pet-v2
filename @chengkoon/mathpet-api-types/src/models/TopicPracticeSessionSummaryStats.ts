/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TopicPracticeSessionSummaryStats
 */
export interface TopicPracticeSessionSummaryStats {
    /**
     * Total questions attempted in session
     * @type {number}
     * @memberof TopicPracticeSessionSummaryStats
     */
    totalQuestions: number;
    /**
     * Number of questions answered correctly
     * @type {number}
     * @memberof TopicPracticeSessionSummaryStats
     */
    questionsCorrect: number;
    /**
     * Number of questions skipped
     * @type {number}
     * @memberof TopicPracticeSessionSummaryStats
     */
    questionsSkipped: number;
    /**
     * Total time spent in seconds
     * @type {number}
     * @memberof TopicPracticeSessionSummaryStats
     */
    totalTimeSpent: number;
    /**
     * Accuracy percentage
     * @type {number}
     * @memberof TopicPracticeSessionSummaryStats
     */
    accuracyPercentage: number;
    /**
     * Average time per question in seconds
     * @type {number}
     * @memberof TopicPracticeSessionSummaryStats
     */
    averageTimePerQuestion: number;
}

/**
 * Check if a given object implements the TopicPracticeSessionSummaryStats interface.
 */
export function instanceOfTopicPracticeSessionSummaryStats(value: object): value is TopicPracticeSessionSummaryStats {
    if (!('totalQuestions' in value) || value['totalQuestions'] === undefined) return false;
    if (!('questionsCorrect' in value) || value['questionsCorrect'] === undefined) return false;
    if (!('questionsSkipped' in value) || value['questionsSkipped'] === undefined) return false;
    if (!('totalTimeSpent' in value) || value['totalTimeSpent'] === undefined) return false;
    if (!('accuracyPercentage' in value) || value['accuracyPercentage'] === undefined) return false;
    if (!('averageTimePerQuestion' in value) || value['averageTimePerQuestion'] === undefined) return false;
    return true;
}

export function TopicPracticeSessionSummaryStatsFromJSON(json: any): TopicPracticeSessionSummaryStats {
    return TopicPracticeSessionSummaryStatsFromJSONTyped(json, false);
}

export function TopicPracticeSessionSummaryStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopicPracticeSessionSummaryStats {
    if (json == null) {
        return json;
    }
    return {
        
        'totalQuestions': json['totalQuestions'],
        'questionsCorrect': json['questionsCorrect'],
        'questionsSkipped': json['questionsSkipped'],
        'totalTimeSpent': json['totalTimeSpent'],
        'accuracyPercentage': json['accuracyPercentage'],
        'averageTimePerQuestion': json['averageTimePerQuestion'],
    };
}

export function TopicPracticeSessionSummaryStatsToJSON(json: any): TopicPracticeSessionSummaryStats {
    return TopicPracticeSessionSummaryStatsToJSONTyped(json, false);
}

export function TopicPracticeSessionSummaryStatsToJSONTyped(value?: TopicPracticeSessionSummaryStats | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'totalQuestions': value['totalQuestions'],
        'questionsCorrect': value['questionsCorrect'],
        'questionsSkipped': value['questionsSkipped'],
        'totalTimeSpent': value['totalTimeSpent'],
        'accuracyPercentage': value['accuracyPercentage'],
        'averageTimePerQuestion': value['averageTimePerQuestion'],
    };
}

