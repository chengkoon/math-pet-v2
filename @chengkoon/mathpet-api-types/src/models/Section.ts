/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a section within a paper
 * @export
 * @interface Section
 */
export interface Section {
    /**
     * Unique identifier for the section
     * @type {string}
     * @memberof Section
     */
    id?: string;
    /**
     * ID of the paper this section belongs to
     * @type {string}
     * @memberof Section
     */
    paperId?: string;
    /**
     * Title of the section
     * @type {string}
     * @memberof Section
     */
    title?: string;
    /**
     * ID of the parent section (if any)
     * @type {string}
     * @memberof Section
     */
    parentSectionId?: string;
    /**
     * Instruction for this section
     * @type {string}
     * @memberof Section
     */
    instruction?: string;
    /**
     * Order of this section within the paper
     * @type {number}
     * @memberof Section
     */
    sectionOrder?: number;
    /**
     * Computed order of this section for display purposes
     * @type {string}
     * @memberof Section
     */
    computedSectionOrder?: string;
    /**
     * Order of this section within the most parent pack
     * @type {number}
     * @memberof Section
     */
    globalOrder?: number;
    /**
     * Total marks for this section
     * @type {number}
     * @memberof Section
     */
    totalMarks?: number;
    /**
     * Number of questions in this section
     * @type {number}
     * @memberof Section
     */
    questionCount?: number;
    /**
     * Date and time when the section was created
     * @type {Date}
     * @memberof Section
     */
    createdAt?: Date;
    /**
     * Date and time when the section was last updated
     * @type {Date}
     * @memberof Section
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the Section interface.
 */
export function instanceOfSection(value: object): value is Section {
    return true;
}

export function SectionFromJSON(json: any): Section {
    return SectionFromJSONTyped(json, false);
}

export function SectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Section {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'paperId': json['paperId'] == null ? undefined : json['paperId'],
        'title': json['title'] == null ? undefined : json['title'],
        'parentSectionId': json['parentSectionId'] == null ? undefined : json['parentSectionId'],
        'instruction': json['instruction'] == null ? undefined : json['instruction'],
        'sectionOrder': json['sectionOrder'] == null ? undefined : json['sectionOrder'],
        'computedSectionOrder': json['computedSectionOrder'] == null ? undefined : json['computedSectionOrder'],
        'globalOrder': json['globalOrder'] == null ? undefined : json['globalOrder'],
        'totalMarks': json['totalMarks'] == null ? undefined : json['totalMarks'],
        'questionCount': json['questionCount'] == null ? undefined : json['questionCount'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function SectionToJSON(json: any): Section {
    return SectionToJSONTyped(json, false);
}

export function SectionToJSONTyped(value?: Section | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'paperId': value['paperId'],
        'title': value['title'],
        'parentSectionId': value['parentSectionId'],
        'instruction': value['instruction'],
        'sectionOrder': value['sectionOrder'],
        'computedSectionOrder': value['computedSectionOrder'],
        'globalOrder': value['globalOrder'],
        'totalMarks': value['totalMarks'],
        'questionCount': value['questionCount'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

