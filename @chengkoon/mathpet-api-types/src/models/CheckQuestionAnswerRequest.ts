/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CheckQuestionAnswerRequest
 */
export interface CheckQuestionAnswerRequest {
    /**
     * ID of the attempt being updated
     * @type {number}
     * @memberof CheckQuestionAnswerRequest
     */
    attemptId: number;
    /**
     * ID of the question being updated
     * @type {number}
     * @memberof CheckQuestionAnswerRequest
     */
    questionId: number;
    /**
     * Index of the question in the practice session
     * @type {number}
     * @memberof CheckQuestionAnswerRequest
     */
    questionIndex?: number;
    /**
     * The student's answer (text for open-ended, option text for MCQ)
     * @type {string}
     * @memberof CheckQuestionAnswerRequest
     */
    studentAnswer?: string;
    /**
     * For MCQ questions, the ID of the selected option
     * @type {number}
     * @memberof CheckQuestionAnswerRequest
     */
    selectedOptionId?: number;
    /**
     * Time spent on this question
     * @type {number}
     * @memberof CheckQuestionAnswerRequest
     */
    timeSpentSeconds: number;
    /**
     * Array of working steps showing the student's work process
     * @type {Array<string>}
     * @memberof CheckQuestionAnswerRequest
     */
    studentWorkingSteps?: Array<string>;
    /**
     * Action to perform - either submit an answer or skip the question
     * @type {string}
     * @memberof CheckQuestionAnswerRequest
     */
    action: CheckQuestionAnswerRequestActionEnum;
}


/**
 * @export
 */
export const CheckQuestionAnswerRequestActionEnum = {
    Answer: 'ANSWER',
    Skip: 'SKIP'
} as const;
export type CheckQuestionAnswerRequestActionEnum = typeof CheckQuestionAnswerRequestActionEnum[keyof typeof CheckQuestionAnswerRequestActionEnum];


/**
 * Check if a given object implements the CheckQuestionAnswerRequest interface.
 */
export function instanceOfCheckQuestionAnswerRequest(value: object): value is CheckQuestionAnswerRequest {
    if (!('attemptId' in value) || value['attemptId'] === undefined) return false;
    if (!('questionId' in value) || value['questionId'] === undefined) return false;
    if (!('timeSpentSeconds' in value) || value['timeSpentSeconds'] === undefined) return false;
    if (!('action' in value) || value['action'] === undefined) return false;
    return true;
}

export function CheckQuestionAnswerRequestFromJSON(json: any): CheckQuestionAnswerRequest {
    return CheckQuestionAnswerRequestFromJSONTyped(json, false);
}

export function CheckQuestionAnswerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckQuestionAnswerRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'attemptId': json['attemptId'],
        'questionId': json['questionId'],
        'questionIndex': json['questionIndex'] == null ? undefined : json['questionIndex'],
        'studentAnswer': json['studentAnswer'] == null ? undefined : json['studentAnswer'],
        'selectedOptionId': json['selectedOptionId'] == null ? undefined : json['selectedOptionId'],
        'timeSpentSeconds': json['timeSpentSeconds'],
        'studentWorkingSteps': json['studentWorkingSteps'] == null ? undefined : json['studentWorkingSteps'],
        'action': json['action'],
    };
}

export function CheckQuestionAnswerRequestToJSON(json: any): CheckQuestionAnswerRequest {
    return CheckQuestionAnswerRequestToJSONTyped(json, false);
}

export function CheckQuestionAnswerRequestToJSONTyped(value?: CheckQuestionAnswerRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'attemptId': value['attemptId'],
        'questionId': value['questionId'],
        'questionIndex': value['questionIndex'],
        'studentAnswer': value['studentAnswer'],
        'selectedOptionId': value['selectedOptionId'],
        'timeSpentSeconds': value['timeSpentSeconds'],
        'studentWorkingSteps': value['studentWorkingSteps'],
        'action': value['action'],
    };
}

