/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExtractQuestionsJobResponse
 */
export interface ExtractQuestionsJobResponse {
    /**
     * Unique identifier for the extraction job
     * @type {string}
     * @memberof ExtractQuestionsJobResponse
     */
    jobId: string;
    /**
     * Current job status
     * @type {string}
     * @memberof ExtractQuestionsJobResponse
     */
    status: ExtractQuestionsJobResponseStatusEnum;
    /**
     * Name of the exam pack being processed
     * @type {string}
     * @memberof ExtractQuestionsJobResponse
     */
    examPackName: string;
    /**
     * When the job was submitted
     * @type {Date}
     * @memberof ExtractQuestionsJobResponse
     */
    submittedAt: Date;
}


/**
 * @export
 */
export const ExtractQuestionsJobResponseStatusEnum = {
    Pending: 'PENDING',
    Processing: 'PROCESSING',
    Completed: 'COMPLETED',
    Failed: 'FAILED',
    Cancelled: 'CANCELLED'
} as const;
export type ExtractQuestionsJobResponseStatusEnum = typeof ExtractQuestionsJobResponseStatusEnum[keyof typeof ExtractQuestionsJobResponseStatusEnum];


/**
 * Check if a given object implements the ExtractQuestionsJobResponse interface.
 */
export function instanceOfExtractQuestionsJobResponse(value: object): value is ExtractQuestionsJobResponse {
    if (!('jobId' in value) || value['jobId'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('examPackName' in value) || value['examPackName'] === undefined) return false;
    if (!('submittedAt' in value) || value['submittedAt'] === undefined) return false;
    return true;
}

export function ExtractQuestionsJobResponseFromJSON(json: any): ExtractQuestionsJobResponse {
    return ExtractQuestionsJobResponseFromJSONTyped(json, false);
}

export function ExtractQuestionsJobResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtractQuestionsJobResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'jobId': json['jobId'],
        'status': json['status'],
        'examPackName': json['examPackName'],
        'submittedAt': (new Date(json['submittedAt'])),
    };
}

export function ExtractQuestionsJobResponseToJSON(json: any): ExtractQuestionsJobResponse {
    return ExtractQuestionsJobResponseToJSONTyped(json, false);
}

export function ExtractQuestionsJobResponseToJSONTyped(value?: ExtractQuestionsJobResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'jobId': value['jobId'],
        'status': value['status'],
        'examPackName': value['examPackName'],
        'submittedAt': ((value['submittedAt']).toISOString()),
    };
}

