/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TopicPracticeRecommendations } from './TopicPracticeRecommendations';
import {
    TopicPracticeRecommendationsFromJSON,
    TopicPracticeRecommendationsFromJSONTyped,
    TopicPracticeRecommendationsToJSON,
    TopicPracticeRecommendationsToJSONTyped,
} from './TopicPracticeRecommendations';
import type { TopicPracticeSessionSummaryStats } from './TopicPracticeSessionSummaryStats';
import {
    TopicPracticeSessionSummaryStatsFromJSON,
    TopicPracticeSessionSummaryStatsFromJSONTyped,
    TopicPracticeSessionSummaryStatsToJSON,
    TopicPracticeSessionSummaryStatsToJSONTyped,
} from './TopicPracticeSessionSummaryStats';
import type { SkippedQuestionSummary } from './SkippedQuestionSummary';
import {
    SkippedQuestionSummaryFromJSON,
    SkippedQuestionSummaryFromJSONTyped,
    SkippedQuestionSummaryToJSON,
    SkippedQuestionSummaryToJSONTyped,
} from './SkippedQuestionSummary';

/**
 * 
 * @export
 * @interface TopicPracticeSessionSummary
 */
export interface TopicPracticeSessionSummary {
    /**
     * 
     * @type {TopicPracticeSessionSummaryStats}
     * @memberof TopicPracticeSessionSummary
     */
    sessionSummary: TopicPracticeSessionSummaryStats;
    /**
     * List of questions that were skipped
     * @type {Array<SkippedQuestionSummary>}
     * @memberof TopicPracticeSessionSummary
     */
    skippedQuestions: Array<SkippedQuestionSummary>;
    /**
     * 
     * @type {TopicPracticeRecommendations}
     * @memberof TopicPracticeSessionSummary
     */
    recommendations: TopicPracticeRecommendations;
}

/**
 * Check if a given object implements the TopicPracticeSessionSummary interface.
 */
export function instanceOfTopicPracticeSessionSummary(value: object): value is TopicPracticeSessionSummary {
    if (!('sessionSummary' in value) || value['sessionSummary'] === undefined) return false;
    if (!('skippedQuestions' in value) || value['skippedQuestions'] === undefined) return false;
    if (!('recommendations' in value) || value['recommendations'] === undefined) return false;
    return true;
}

export function TopicPracticeSessionSummaryFromJSON(json: any): TopicPracticeSessionSummary {
    return TopicPracticeSessionSummaryFromJSONTyped(json, false);
}

export function TopicPracticeSessionSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopicPracticeSessionSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'sessionSummary': TopicPracticeSessionSummaryStatsFromJSON(json['sessionSummary']),
        'skippedQuestions': ((json['skippedQuestions'] as Array<any>).map(SkippedQuestionSummaryFromJSON)),
        'recommendations': TopicPracticeRecommendationsFromJSON(json['recommendations']),
    };
}

export function TopicPracticeSessionSummaryToJSON(json: any): TopicPracticeSessionSummary {
    return TopicPracticeSessionSummaryToJSONTyped(json, false);
}

export function TopicPracticeSessionSummaryToJSONTyped(value?: TopicPracticeSessionSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'sessionSummary': TopicPracticeSessionSummaryStatsToJSON(value['sessionSummary']),
        'skippedQuestions': ((value['skippedQuestions'] as Array<any>).map(SkippedQuestionSummaryToJSON)),
        'recommendations': TopicPracticeRecommendationsToJSON(value['recommendations']),
    };
}

