/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StudentSignupRequest
 */
export interface StudentSignupRequest {
    /**
     * User's login username
     * @type {string}
     * @memberof StudentSignupRequest
     */
    username: string;
    /**
     * User's email address
     * @type {string}
     * @memberof StudentSignupRequest
     */
    email: string;
    /**
     * User's password (will be hashed)
     * @type {string}
     * @memberof StudentSignupRequest
     */
    password: string;
    /**
     * User's first name
     * @type {string}
     * @memberof StudentSignupRequest
     */
    firstName: string;
    /**
     * User's last name
     * @type {string}
     * @memberof StudentSignupRequest
     */
    lastName: string;
    /**
     * User's date of birth (yyyy-MM-dd)
     * @type {Date}
     * @memberof StudentSignupRequest
     */
    dateOfBirth?: Date;
    /**
     * Student's grade level
     * @type {number}
     * @memberof StudentSignupRequest
     */
    levelId: number;
    /**
     * ID of the student's school
     * @type {number}
     * @memberof StudentSignupRequest
     */
    schoolId?: number;
    /**
     * Parent's email address for notifications
     * @type {string}
     * @memberof StudentSignupRequest
     */
    parentEmail?: string;
}

/**
 * Check if a given object implements the StudentSignupRequest interface.
 */
export function instanceOfStudentSignupRequest(value: object): value is StudentSignupRequest {
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('levelId' in value) || value['levelId'] === undefined) return false;
    return true;
}

export function StudentSignupRequestFromJSON(json: any): StudentSignupRequest {
    return StudentSignupRequestFromJSONTyped(json, false);
}

export function StudentSignupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudentSignupRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['username'],
        'email': json['email'],
        'password': json['password'],
        'firstName': json['firstName'],
        'lastName': json['lastName'],
        'dateOfBirth': json['dateOfBirth'] == null ? undefined : (new Date(json['dateOfBirth'])),
        'levelId': json['levelId'],
        'schoolId': json['schoolId'] == null ? undefined : json['schoolId'],
        'parentEmail': json['parentEmail'] == null ? undefined : json['parentEmail'],
    };
}

export function StudentSignupRequestToJSON(json: any): StudentSignupRequest {
    return StudentSignupRequestToJSONTyped(json, false);
}

export function StudentSignupRequestToJSONTyped(value?: StudentSignupRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'username': value['username'],
        'email': value['email'],
        'password': value['password'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'dateOfBirth': value['dateOfBirth'] == null ? undefined : ((value['dateOfBirth']).toISOString().substring(0,10)),
        'levelId': value['levelId'],
        'schoolId': value['schoolId'],
        'parentEmail': value['parentEmail'],
    };
}

