/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Section } from './Section';
import {
    SectionFromJSON,
    SectionFromJSONTyped,
    SectionToJSON,
    SectionToJSONTyped,
} from './Section';

/**
 * Represents a paper in a pack
 * @export
 * @interface Paper
 */
export interface Paper {
    /**
     * Unique identifier for the paper
     * @type {string}
     * @memberof Paper
     */
    id?: string;
    /**
     * ID of the pack this paper belongs to
     * @type {string}
     * @memberof Paper
     */
    packId?: string;
    /**
     * Title of the paper
     * @type {string}
     * @memberof Paper
     */
    title?: string;
    /**
     * Order of this paper within the pack
     * @type {number}
     * @memberof Paper
     */
    paperOrder?: number;
    /**
     * Total marks for this paper
     * @type {number}
     * @memberof Paper
     */
    totalMarks?: number;
    /**
     * Time limit for this paper in minutes
     * @type {number}
     * @memberof Paper
     */
    timeLimitMinutes?: number;
    /**
     * Sections within this paper
     * @type {Array<Section>}
     * @memberof Paper
     */
    sections?: Array<Section>;
    /**
     * Date and time when the paper was created
     * @type {Date}
     * @memberof Paper
     */
    createdAt?: Date;
    /**
     * Date and time when the paper was last updated
     * @type {Date}
     * @memberof Paper
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the Paper interface.
 */
export function instanceOfPaper(value: object): value is Paper {
    return true;
}

export function PaperFromJSON(json: any): Paper {
    return PaperFromJSONTyped(json, false);
}

export function PaperFromJSONTyped(json: any, ignoreDiscriminator: boolean): Paper {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'packId': json['packId'] == null ? undefined : json['packId'],
        'title': json['title'] == null ? undefined : json['title'],
        'paperOrder': json['paperOrder'] == null ? undefined : json['paperOrder'],
        'totalMarks': json['totalMarks'] == null ? undefined : json['totalMarks'],
        'timeLimitMinutes': json['timeLimitMinutes'] == null ? undefined : json['timeLimitMinutes'],
        'sections': json['sections'] == null ? undefined : ((json['sections'] as Array<any>).map(SectionFromJSON)),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function PaperToJSON(json: any): Paper {
    return PaperToJSONTyped(json, false);
}

export function PaperToJSONTyped(value?: Paper | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'packId': value['packId'],
        'title': value['title'],
        'paperOrder': value['paperOrder'],
        'totalMarks': value['totalMarks'],
        'timeLimitMinutes': value['timeLimitMinutes'],
        'sections': value['sections'] == null ? undefined : ((value['sections'] as Array<any>).map(SectionToJSON)),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

