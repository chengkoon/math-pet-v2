/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TopicResponse } from './TopicResponse';
import {
    TopicResponseFromJSON,
    TopicResponseFromJSONTyped,
    TopicResponseToJSON,
    TopicResponseToJSONTyped,
} from './TopicResponse';

/**
 * 
 * @export
 * @interface PagedTopics
 */
export interface PagedTopics {
    /**
     * Total number of elements matching the criteria
     * @type {number}
     * @memberof PagedTopics
     */
    totalElements?: number;
    /**
     * Total number of pages
     * @type {number}
     * @memberof PagedTopics
     */
    totalPages?: number;
    /**
     * Number of elements per page
     * @type {number}
     * @memberof PagedTopics
     */
    pageSize?: number;
    /**
     * Current page number (1-based)
     * @type {number}
     * @memberof PagedTopics
     */
    pageNumber?: number;
    /**
     * Indicates if this is the last page
     * @type {boolean}
     * @memberof PagedTopics
     */
    last?: boolean;
    /**
     * Indicates if this is the first page
     * @type {boolean}
     * @memberof PagedTopics
     */
    first?: boolean;
    /**
     * 
     * @type {Array<TopicResponse>}
     * @memberof PagedTopics
     */
    content?: Array<TopicResponse>;
}

/**
 * Check if a given object implements the PagedTopics interface.
 */
export function instanceOfPagedTopics(value: object): value is PagedTopics {
    return true;
}

export function PagedTopicsFromJSON(json: any): PagedTopics {
    return PagedTopicsFromJSONTyped(json, false);
}

export function PagedTopicsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PagedTopics {
    if (json == null) {
        return json;
    }
    return {
        
        'totalElements': json['totalElements'] == null ? undefined : json['totalElements'],
        'totalPages': json['totalPages'] == null ? undefined : json['totalPages'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'pageNumber': json['pageNumber'] == null ? undefined : json['pageNumber'],
        'last': json['last'] == null ? undefined : json['last'],
        'first': json['first'] == null ? undefined : json['first'],
        'content': json['content'] == null ? undefined : ((json['content'] as Array<any>).map(TopicResponseFromJSON)),
    };
}

export function PagedTopicsToJSON(json: any): PagedTopics {
    return PagedTopicsToJSONTyped(json, false);
}

export function PagedTopicsToJSONTyped(value?: PagedTopics | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'totalElements': value['totalElements'],
        'totalPages': value['totalPages'],
        'pageSize': value['pageSize'],
        'pageNumber': value['pageNumber'],
        'last': value['last'],
        'first': value['first'],
        'content': value['content'] == null ? undefined : ((value['content'] as Array<any>).map(TopicResponseToJSON)),
    };
}

