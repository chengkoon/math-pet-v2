/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a response of a pack
 * @export
 * @interface PackResponse
 */
export interface PackResponse {
    /**
     * Unique identifier for the pack
     * @type {string}
     * @memberof PackResponse
     */
    id?: string;
    /**
     * Type of the pack
     * @type {string}
     * @memberof PackResponse
     */
    type?: string;
    /**
     * Title of the pack
     * @type {string}
     * @memberof PackResponse
     */
    title?: string;
    /**
     * Description of the pack
     * @type {string}
     * @memberof PackResponse
     */
    description?: string;
    /**
     * Date of the pack (yyyy-MM-dd)
     * @type {Date}
     * @memberof PackResponse
     */
    packDate?: Date;
    /**
     * Total marks for the pack
     * @type {number}
     * @memberof PackResponse
     */
    totalMarks?: number;
    /**
     * Time limit for the pack in minutes
     * @type {number}
     * @memberof PackResponse
     */
    timeLimitMinutes?: number;
    /**
     * ID of the user who created the pack
     * @type {string}
     * @memberof PackResponse
     */
    createdBy?: string;
    /**
     * Date and time when the pack was created
     * @type {Date}
     * @memberof PackResponse
     */
    createdAt?: Date;
    /**
     * Date and time when the pack was last updated
     * @type {Date}
     * @memberof PackResponse
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the PackResponse interface.
 */
export function instanceOfPackResponse(value: object): value is PackResponse {
    return true;
}

export function PackResponseFromJSON(json: any): PackResponse {
    return PackResponseFromJSONTyped(json, false);
}

export function PackResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : json['type'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'packDate': json['packDate'] == null ? undefined : (new Date(json['packDate'])),
        'totalMarks': json['totalMarks'] == null ? undefined : json['totalMarks'],
        'timeLimitMinutes': json['timeLimitMinutes'] == null ? undefined : json['timeLimitMinutes'],
        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function PackResponseToJSON(json: any): PackResponse {
    return PackResponseToJSONTyped(json, false);
}

export function PackResponseToJSONTyped(value?: PackResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'title': value['title'],
        'description': value['description'],
        'packDate': value['packDate'] == null ? undefined : ((value['packDate']).toISOString().substring(0,10)),
        'totalMarks': value['totalMarks'],
        'timeLimitMinutes': value['timeLimitMinutes'],
        'createdBy': value['createdBy'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

