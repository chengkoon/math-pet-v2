/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * List of questions that were skipped
 * @export
 * @interface SkippedQuestionSummary
 */
export interface SkippedQuestionSummary {
    /**
     * Question ID
     * @type {string}
     * @memberof SkippedQuestionSummary
     */
    id: string;
    /**
     * Question text preview
     * @type {string}
     * @memberof SkippedQuestionSummary
     */
    questionText: string;
    /**
     * Type of question
     * @type {string}
     * @memberof SkippedQuestionSummary
     */
    questionType: SkippedQuestionSummaryQuestionTypeEnum;
}


/**
 * @export
 */
export const SkippedQuestionSummaryQuestionTypeEnum = {
    Mcq: 'MCQ',
    ShortAnswer: 'SHORT_ANSWER',
    ProblemSum: 'PROBLEM_SUM'
} as const;
export type SkippedQuestionSummaryQuestionTypeEnum = typeof SkippedQuestionSummaryQuestionTypeEnum[keyof typeof SkippedQuestionSummaryQuestionTypeEnum];


/**
 * Check if a given object implements the SkippedQuestionSummary interface.
 */
export function instanceOfSkippedQuestionSummary(value: object): value is SkippedQuestionSummary {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('questionText' in value) || value['questionText'] === undefined) return false;
    if (!('questionType' in value) || value['questionType'] === undefined) return false;
    return true;
}

export function SkippedQuestionSummaryFromJSON(json: any): SkippedQuestionSummary {
    return SkippedQuestionSummaryFromJSONTyped(json, false);
}

export function SkippedQuestionSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): SkippedQuestionSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'questionText': json['questionText'],
        'questionType': json['questionType'],
    };
}

export function SkippedQuestionSummaryToJSON(json: any): SkippedQuestionSummary {
    return SkippedQuestionSummaryToJSONTyped(json, false);
}

export function SkippedQuestionSummaryToJSONTyped(value?: SkippedQuestionSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'questionText': value['questionText'],
        'questionType': value['questionType'],
    };
}

