/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Link,
} from '../models/index';
import {
    LinkFromJSON,
    LinkToJSON,
} from '../models/index';

/**
 * 
 */
export class ActuatorApi extends runtime.BaseAPI {

    /**
     * Actuator web endpoint \'health\'
     */
    async healthRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/actuator/health`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Actuator web endpoint \'health\'
     */
    async health(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.healthRaw(initOverrides);
        return await response.value();
    }

    /**
     * Actuator web endpoint \'health-path\'
     */
    async healthPathRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/actuator/health/**`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Actuator web endpoint \'health-path\'
     */
    async healthPath(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.healthPathRaw(initOverrides);
        return await response.value();
    }

    /**
     * Actuator root web endpoint
     */
    async linksRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: { [key: string]: Link; }; }>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/actuator`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Actuator root web endpoint
     */
    async links(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: { [key: string]: Link; }; }> {
        const response = await this.linksRaw(initOverrides);
        return await response.value();
    }

}
