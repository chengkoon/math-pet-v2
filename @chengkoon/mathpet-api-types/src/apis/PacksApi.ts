/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  PackStructureResponse,
  PagedPackResponse,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    PackStructureResponseFromJSON,
    PackStructureResponseToJSON,
    PagedPackResponseFromJSON,
    PagedPackResponseToJSON,
} from '../models/index';

export interface GetExamPacksRequest {
    page?: number;
    size?: number;
    type?: string;
    title?: string;
    dateFrom?: Date;
    dateTo?: Date;
    createdBy?: string;
}

export interface GetPackStructureRequest {
    id: string;
}

/**
 * 
 */
export class PacksApi extends runtime.BaseAPI {

    /**
     * Retrieve a paginated list of exam packs
     * Get all exam packs
     */
    async getExamPacksRaw(requestParameters: GetExamPacksRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedPackResponse>> {
        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['size'] != null) {
            queryParameters['size'] = requestParameters['size'];
        }

        if (requestParameters['type'] != null) {
            queryParameters['type'] = requestParameters['type'];
        }

        if (requestParameters['title'] != null) {
            queryParameters['title'] = requestParameters['title'];
        }

        if (requestParameters['dateFrom'] != null) {
            queryParameters['dateFrom'] = (requestParameters['dateFrom'] as any).toISOString().substring(0,10);
        }

        if (requestParameters['dateTo'] != null) {
            queryParameters['dateTo'] = (requestParameters['dateTo'] as any).toISOString().substring(0,10);
        }

        if (requestParameters['createdBy'] != null) {
            queryParameters['createdBy'] = requestParameters['createdBy'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/packs/exams`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedPackResponseFromJSON(jsonValue));
    }

    /**
     * Retrieve a paginated list of exam packs
     * Get all exam packs
     */
    async getExamPacks(requestParameters: GetExamPacksRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedPackResponse> {
        const response = await this.getExamPacksRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieve the papers and sections structure of a specific pack
     * Get the structure of a specific pack
     */
    async getPackStructureRaw(requestParameters: GetPackStructureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PackStructureResponse>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling getPackStructure().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/packs/{id}/structure`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PackStructureResponseFromJSON(jsonValue));
    }

    /**
     * Retrieve the papers and sections structure of a specific pack
     * Get the structure of a specific pack
     */
    async getPackStructure(requestParameters: GetPackStructureRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PackStructureResponse> {
        const response = await this.getPackStructureRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
