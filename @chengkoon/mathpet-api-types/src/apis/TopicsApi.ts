/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * This API exposes endpoints to manage entities and items.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  PagedTopics,
} from '../models/index';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    PagedTopicsFromJSON,
    PagedTopicsToJSON,
} from '../models/index';

export interface GetTopicsRequest {
    page?: number;
    size?: number;
    depthType?: string;
}

/**
 * 
 */
export class TopicsApi extends runtime.BaseAPI {

    /**
     * Retrieve a paginated list of curriculum topics filtered by depth type
     * Get curriculum topics by depth type
     */
    async getTopicsRaw(requestParameters: GetTopicsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PagedTopics>> {
        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['size'] != null) {
            queryParameters['size'] = requestParameters['size'];
        }

        if (requestParameters['depthType'] != null) {
            queryParameters['depthType'] = requestParameters['depthType'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/topics`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PagedTopicsFromJSON(jsonValue));
    }

    /**
     * Retrieve a paginated list of curriculum topics filtered by depth type
     * Get curriculum topics by depth type
     */
    async getTopics(requestParameters: GetTopicsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PagedTopics> {
        const response = await this.getTopicsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
